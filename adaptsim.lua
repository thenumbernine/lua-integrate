-- adaptive simpsons' 
-- from 2000 Gander, Gautschi "Adaptive Quadrature-Revisited"
-- this is running forever on float128

--[[
%ADAPTSIMSTP Recursive function used by ADAPTSIM.
%
%	Q = ADAPTSIMSTP(’F’,A,B,FA,FM,FB,IS,TRACE) tries to
%	approximate the integral of F(X) from A to B to
%	an appropriate relative error. The argument ’F’ is
%	a string containing the name of f. The remaining
%	arguments are generated by ADAPTSIM or by recursion.
%
%	See also ADAPTSIM.
%
%	Walter Gander, 08/03/98
--]]
local maxdepth = 8
local function adaptsimstp(f, a, b, fa, fm, fb, is, depth, ...)
	depth = depth + 1
--[[	
	if depth > maxdepth then
		-- I would rely on a stack overflow, but tail calls make that an infinite loop
		return false, "exceeded max depth"
	end
--]]	
	local m = (a + b) / 2
	local h = (b - a) / 4
	local fml = f(a + h, ...)
	local fmr = f(b - h, ...)
	local i1 = h / 1.5 * (fa + 4 * fm + fb)
	local i2 = h / 3 * (fa + 4 * (fml + fmr) + 2 * fm + fb)
	local i1 = (16 * i2 - i1) / 15
	if is + (i1 - i2) == is 
	or m <= a 
	or b <= m 
	then
--[[		
		if m <= a 
		or b <= m 
		then
			return return false, "Interval contains no more machine number. Required tolerance may not be met."
		end
print(a, b-a, i1)		
--]]
		return i1
	end
	return adaptsimstp(f, a, m, fa, fml, fm, is, depth, ...)
		+ adaptsimstp(f, m, b, fm, fmr, fb, is, depth, ...)
end

--[[
%ADAPTSIM Numerically evaluate integral using adaptive
%	Simpson rule.
%
%	Q = ADAPTSIM(’F’,A,B) approximates the integral of
%	F(X) from A to B to machine precision. ’F’ is a
%	string containing the name of the function. The
%	function F must return a vector of output values if
%	given a vector of input values.
%
%	Q = ADAPTSIM(’F’,A,B,TOL) integrates to a relative
%	error of TOL.
%
%	Q = ADAPTSIM(’F’,A,B,TOL,TRACE) displays the left
%	end point of the current interval, the interval
%	length, and the partial integral.
%
%	Q = ADAPTSIM(’F’,A,B,TOL,TRACE,P1,P2,...) allows
%	coefficients P1,... to be passed directly to the
%	function F: G = F(X,P1,P2,...). To use default values
%
%
%
%
%
%	WALTER GANDER AND WALTER GAUTSCHI
for TOL or TRACE, one may pass the empty matrix ([]).
See also ADAPTSIMSTP.
Walter Gander, 08/03/98
Reference: Gander, Computermathematik, Birkhaeuser, 1992.

from the paper:
For int 0 to 1 of √x dx with tol=1e-8 we obtain with adaptsim the value 0.6666666539870345
(correct to almost 8 digits) using only 126 function evaluations.
126 function evaluations = a full binary tree of depth 6 ... so maxdepth of 7?
--]]
--local eps = 1e-7
local eps = 1e-15
local yy0 = {.9501, .2311, .6068, .4860, .8913}
local function adaptsim(f, xL, xR, tol, ...)
	tol = math.max(tol or eps, eps)

	local xmid = (xL + xR) / 2
	
	local fL = f(xL, ...)
	local fmid = f(xmid, ...)
	local fR = f(xR, ...)

	local ysum = fL + fmid + fR

	local yysum = 0
	for i,yy0i in ipairs(yy0) do
		local yyi = f(xL + yy0i * (xR - xL), ...)
		yysum = yysum + yyi
	end

	local is = (xR - xL) / 8 * (ysum + yysum)
	if is == 0 then is = xR - xL end
	is = is * tol / eps

	return adaptsimstp(f, xL, xR, fL, fmid, fR, is, 0, ...)
end

return adaptsim
